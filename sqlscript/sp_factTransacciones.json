{
	"name": "sp_factTransacciones",
	"properties": {
		"content": {
			"query": "CREATE PROCEDURE sp_DeleteAndInsertFactTransaction AS\nBEGIN\n\tDECLARE @Date DATE\n\tDECLARE @CurrentDay INT\n\n\tSET @Date= (SELECT DATEADD(MONTH, -1, CAST(GETDATE() as DATE)));\n\n\tIF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'ext_transacciones' )\n\t\tBEGIN\n\t\t\tCREATE EXTERNAL TABLE ext_transacciones (\n\t\t\t\tid INT,\n\t\t\t\t[date] VARCHAR(100),\n\t\t\t\tclient_id INT,\n\t\t\t\tcard_id INT,\n\t\t\t\tamount VARCHAR(20),\n\t\t\t\tuse_chip VARCHAR(100),\n\t\t\t\tmerchant_id INT,\n\t\t\t\tmerchant_city VARCHAR(100),\n\t\t\t\tmerchant_state VARCHAR(100),\n\t\t\t\tzip VARCHAR(10),\n\t\t\t\tmcc INT,\n\t\t\t\terrors VARCHAR(255)\n\t\t\t)\n\t\t\tWITH (\n\t\t\t\tLOCATION = '/transacciones.parquet/',  -- Ajusta si el archivo estï¿½ en otra carpeta o contenedor\n\t\t\t\tDATA_SOURCE = ds_datalake,\n\t\t\t\tFILE_FORMAT = parquet_format\n\t\t\t);\n\t\tEND\t\n\n\n\n\t---------------------------------------------\n\t-- Insertar nuevos datos de location\n\tINSERT INTO DimLocation\n\t\t(\n\t\t[merchant_city],\n\t\t[merchant_state],\n\t\t[CreationDate]\n\t\t)\n\tSELECT DISTINCT\n\t\tT.MERCHANT_CITY,\n\t\tT.merchant_state,\n\t\tGETUTCDATE() as CreationDate\n\tFROM ext_transacciones as T\n\tLEFT JOIN DimLocation as D ON T.merchant_city = D.Merchant_city AND T.merchant_state = D.merchant_state \n\tWHERE D.LocationSNK IS NULL\tAND T.merchant_city IS NOT NULL\n\n\t-----------------------------------------------\n\t--Actualizar los datos\n\tUPDATE D SET\n\t\tD.[merchant_city] = T.MERCHANT_CITY,\n\t\tD.[merchant_state]= T.merchant_state,\n\t\tD.CreationDate = GETUTCDATE() \n\tFROM DimLocation as D\n\tINNER JOIN ext_transacciones as T ON T.merchant_city = D.Merchant_city AND T.merchant_state = D.merchant_state \n\tWHERE \n\t\tD.[merchant_city] <> T.MERCHANT_CITY OR\n\t\tD.[merchant_state] <> T.merchant_state\t\n\n\t----------------------------------------------\n\t--CTA para transformacion\n\n\tIF OBJECT_ID(N'CTA_FactTransaction', N'U') IS NOT NULL\n\t\t\t\tDROP TABLE CTA_FactTransaction\n\n\tCREATE TABLE CTA_FactTransaction\n\tWITH (\n\t\tDISTRIBUTION = HASH (clientSNK)\n\t\t, CLUSTERED INDEX ([InvoiceDate] ASC)\n\t\t) AS\n\n\tSELECT\n\t\tInvoice = ISNULL(T.id, -1),\n\t\tInvoiceDate = CASE WHEN TRY_CAST([date] as DATETIME) IS NULL THEN CAST('1900-01-01' as DATETIME) ELSE CAST([date] as DATETIME) END,\n\t\t[Date] = CASE WHEN TRY_CAST([date] as DATE) IS NULL THEN CAST('1900-01-01' as DATE) ELSE CAST([date] as DATE) END,\n\t\tclientSNK = CASE WHEN T.client_id IS NULL THEN -1 ELSE ISNULL(U.clientSNK, 0) END,\n\t\tcardSNK = CASE WHEN T.card_id IS NULL THEN -1 ELSE ISNULL(C.cardSNK, 0) END,\n\t\tAmount = ISNULL(CAST(REPLACE(T.amount,'$','') AS DECIMAL(20,4)),0.0),\n\t\tuse_chip = use_chip,\n\t\tLocationSNK = ISNULL(L.LocationSNK, 0),\n\t\tCreationDate = GETUTCDATE()\n\n\tFROM ext_transacciones as T\n\tLEFT JOIN DimCards AS C ON T.card_id = C.id_card\n\tLEFT JOIN DimClient AS U ON T.client_id = U.id_client\n\tLEFT JOIN DimLocation AS L ON T.merchant_city = L.merchant_city AND T.merchant_state = L.merchant_state\n\n\n\t---------------------------------Cargar datos segun el delta tiempo\n\t----eliminar primero informacion\n\n\tDELETE FactTransaction\n\tWhere [date] >= @Date\n\n\n\t-------------------------------------------\n\t--insertar los datos\n\n\tINSERT INTO FactTransaction\n\t(\n\t\tInvoice\n\t\t,InvoiceDate \n\t\t,[Date] \n\t\t,clientSNK\n\t\t,cardSNK \n\t\t,Amount\n\t\t,use_chip \n\t\t,LocationSNK \n\t\t,CreationDate\n\t)\n\tSELECT \n\t\tInvoice\n\t\t,InvoiceDate \n\t\t,[Date] \n\t\t,clientSNK\n\t\t,cardSNK \n\t\t,Amount\n\t\t,use_chip \n\t\t,LocationSNK \n\t\t,CreationDate\n\tFROM CTA_FactTransaction\n\tWHERE [date] >= @Date\n\n\t---- Eliminar los CTA\n\tIF OBJECT_ID(N'CTA_FactTransaction', N'U') IS NOT NULL\n\t\t\t\tDROP TABLE CTA_FactTransaction\nEND\n\nEXEC sp_DeleteAndInsertFactTransaction",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}